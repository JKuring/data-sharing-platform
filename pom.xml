<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.eastcom</groupId>
    <artifactId>data-sharing-platform</artifactId>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>DataController</module>
        <module>DataLoader</module>
        <module>DataAggregator</module>
        <module>Common</module>
    </modules>

    <packaging>pom</packaging>

    <repositories>
        <repository>
            <id>cloudera</id>
            <url>https://repository.cloudera.com/artifactory/cloudera-repos/</url>
        </repository>
    </repositories>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.4.3.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>


    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.7</java.version>
        <!--hadoop 2.6.0- 2.7.1-->
        <spring.boot.data.hadoop.version>2.4.0.RELEASE</spring.boot.data.hadoop.version>
        <scala.version>2.10.6</scala.version>
        <scala.compat.version>2.10</scala.compat.version>
        <spark.version>1.6.1</spark.version>
        <hbase.version>1.0.0</hbase.version>
        <hive.version>1.1.0</hive.version>
        <hadoop.version>2.6.0</hadoop.version>
    </properties>

    <dependencies>
        <!-- spring boot-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- spring-->

        <!--<dependency>-->
        <!--<groupId>org.springframework</groupId>-->
        <!--<artifactId>spring-context</artifactId>-->
        <!--</dependency>-->

        <!-- spring data -->
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-hadoop</artifactId>
            <version>${spring.boot.data.hadoop.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.zookeeper</groupId>
                    <artifactId>zookeeper</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.hbase</groupId>
                    <artifactId>hbase</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.hbase</groupId>
                    <artifactId>hbase-client</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.hbase</groupId>
                    <artifactId>hbase-common</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.hadoop</groupId>
                    <artifactId>hadoop-yarn-common</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.hadoop</groupId>
                    <artifactId>hadoop-hdfs</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.hadoop</groupId>
                    <artifactId>hadoop-mapreduce-client-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.hadoop</groupId>
                    <artifactId>hadoop-common</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.hadoop</groupId>
                    <artifactId>hadoop-streaming</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.hadoop</groupId>
                    <artifactId>hadoop-distcp</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.hadoop</groupId>
                    <artifactId>hadoop-mapreduce-client-jobclient</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!--cdh-->
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-client</artifactId>
            <version>${hadoop.version}</version>
            <!--<scope>provided</scope>-->
        </dependency>

        <dependency>
            <groupId>org.apache.hive</groupId>
            <artifactId>hive-service</artifactId>
            <version>${hive.version}</version>
            <!--<scope>provided</scope>-->
        </dependency>

        <dependency>
            <groupId>org.apache.hbase</groupId>
            <artifactId>hbase-client</artifactId>
            <version>${hbase.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.hbase</groupId>
            <artifactId>hbase-server</artifactId>
            <version>${hbase.version}</version>
        </dependency>
        <!--======================================-->

        <!--spark-->
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-hive_${scala.compat.version}</artifactId>
            <version>${spark.version}</version>
            <!--<scope>provided</scope>-->
        </dependency>

        <!-- 带 scala 2.10.5 compile-->
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-streaming_${scala.compat.version}</artifactId>
            <version>${spark.version}</version>
            <!--<scope>provided</scope>-->
        </dependency>

        <!--<dependency>
            <groupId>com.cloudera</groupId>
            <artifactId>spark-hbase</artifactId>
            <version>${sparkonhbase.version}</version>
            <scope>provided</scope>
        </dependency>-->

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_${scala.compat.version}</artifactId>
            <version>${spark.version}</version>
            <!--<scope>provided</scope>-->
        </dependency>
        <!--======================================-->

        <!--rabbitMq-->
        <dependency>
            <groupId>org.springframework.amqp</groupId>
            <artifactId>spring-rabbit</artifactId>
        </dependency>

    </dependencies>


    <build>
        <plugins>

            <!--&lt;!&ndash;编译插件，可依赖外包&ndash;&gt;-->
            <!--<plugin>-->
            <!--<artifactId>maven-compiler-plugin</artifactId>-->
            <!--<version>2.3.2</version>-->
            <!--<configuration>-->
            <!--<source>1.7</source>-->
            <!--<target>1.7</target>-->
            <!--<encoding>UTF-8</encoding>-->
            <!--<compilerArguments>-->
            <!--<extdirs>${project.basedir}/lib</extdirs>&lt;!&ndash;编译依赖指定外部lib&ndash;&gt;-->
            <!--</compilerArguments>-->
            <!--</configuration>-->
            <!--</plugin>-->

            <!--&lt;!&ndash;pom依赖打包&ndash;&gt;-->
            <!--<plugin>-->
            <!--<groupId>org.apache.maven.plugins</groupId>-->
            <!--<artifactId>maven-dependency-plugin</artifactId>-->
            <!--<executions>-->
            <!--<execution>-->
            <!--<id>copy</id>-->
            <!--<phase>prepare-package</phase>-->
            <!--<goals>-->
            <!--<goal>copy-dependencies</goal>-->
            <!--</goals>-->
            <!--<configuration>-->
            <!--<outputDirectory>target/lib</outputDirectory>-->
            <!--&lt;!&ndash;该路径为项目根&ndash;&gt;-->
            <!--</configuration>-->
            <!--</execution>-->
            <!--</executions>-->
            <!--</plugin>-->

            <!--&lt;!&ndash;打包插件&ndash;&gt;-->
            <!--<plugin>-->
            <!--<groupId>org.apache.maven.plugins</groupId>-->
            <!--<artifactId>maven-jar-plugin</artifactId>-->
            <!--<configuration>-->
            <!--<archive>-->
            <!--<manifest>-->
            <!--<addClasspath>true</addClasspath>-->
            <!--<classpathPrefix>lib</classpathPrefix>-->
            <!--<mainClass>com.eastcom.Controller</mainClass>-->
            <!--</manifest>-->
            <!--</archive>-->
            <!--</configuration>-->
            <!--</plugin>-->
        </plugins>

        <resources>
            <resource>
                <targetPath>../lib/</targetPath>
                <directory>lib/</directory>
                <includes>
                    <include>*</include>
                </includes>
            </resource>
            <!--spring内部依赖-->
            <!--<resource>-->
            <!--<targetPath>.</targetPath>-->
            <!--<directory>src/main/resources/</directory>-->
            <!--<includes>-->
            <!--<include>conf/beans.xml</include>-->
            <!--</includes>-->
            <!--<excludes>-->
            <!--<exclude>conf/hbase/auth/*</exclude>-->
            <!--<exclude>conf/*.xml</exclude>-->
            <!--<exclude>*.sh</exclude>-->
            <!--<exclude>*log</exclude>-->
            <!--</excludes>-->
            <!--</resource>-->
            <!--外部配置-->
            <resource>
                <targetPath>../</targetPath>
                <directory>src/main/resources/</directory>
                <excludes>
                    <exclude>*.sh</exclude>
                    <exclude>*log</exclude>
                </excludes>
            </resource>
            <!--启动脚本-->
            <resource>
                <targetPath>../bin</targetPath>
                <directory>src/main/resources/</directory>
                <includes>
                    <include>partition.sh</include>
                </includes>
            </resource>
        </resources>

    </build>


</project>